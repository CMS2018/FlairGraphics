@using FlairGraphic.Base.Models;
@model FlairGraphic.Models.company
<style>
    .intl-tel-input {
        position: unset !important;
    }
</style>
<script>
    $(document).ready(function () {
        $("#frmAddCompany #country_code").intlTelInput(
            {
                preferredCountries: ["ae", "in"],

            });
        $("#frmAddCompany #phone_number").intlTelInput(
            {
                preferredCountries: ["ae", "in"],

            });
        $("#frmAddCompany #mobile").intlTelInput(
            {
                preferredCountries: ["ae", "in"],

            });
        
        STUtil.InitFunction();
        $('#country_id').change(function () {
            fillState('');
        });
    })
    function email_id_isExist() {
        STUtil.IsExist({
            ctrlId: 'email_id',
            controllerName: 'Json',
            formId: 'frmAddCompany',
            actionName: 'IsEmailIdExist',
            parmVal: $('#email_id').val() + ',' + $('#user_id').val(),//saprated comma
        });
    }
    function login_id_isExist() {
        STUtil.IsExist({
            ctrlId: 'login_id',
            formId: 'frmAddCompany',
            controllerName: 'Json',
            actionName: 'IsLoginIDExist',
            parmVal: $('#login_id').val(),//saprated comma
        });
    }
    function fillState(SelectedMenuAction) {
        var idVal = $('#country_id').val();
        var controllerName = 'json';
        var actionName = 'GetStateByCountry';
        if (idVal != '') {
            $.post(base.getUrl(controllerName, actionName), { id: idVal }, function (data) {
                $('#state_id').empty();
                $('#state_id').append($('<option />').val('').text('Please Select'));
                $.each(data, function () {
                    if (SelectedMenuAction == this.Value) {
                        $('#state_id').append($('<option selected />').val(this.Value).text(this.Text));
                    }
                    else {
                        $('#state_id').append($('<option />').val(this.Value).text(this.Text));
                    }
                });
            });
        }
        else {
            $('#state_id').empty();
            $('#state_id').append($('<option />').val('').text('Please Select'));
        }
    }

</script>
@{
    string Is_view = Model.company_id > 0 ? "block" : "none";
    var img = AWSUtil.GetFileURL(Model.company_logo, Model.company_folder_name);
}
@using (Html.BeginForm("AddCompany", "Company", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmAddCompany", @class = "form-material m-t-40" }))
{
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.HiddenFor(m => m.company_id)
                <label>Business Name</label>
                @Html.TextBoxFor(m => m.business_name, new { @class = "form-control required", type = "text", id = "business_name", placeholder = "Business Name", pattern = @RegExConst.General, required = "required", title = "Enter Business Name", @isExist = "true" })
            </div>
        </div>
        @*<div class="col-md-6">
                <div class="form-group">
                    <label>Licence Number</label>
                    @Html.TextBoxFor(model => model.licence_no, new { @class = "form-control required", required = "required" })
                </div>
            </div>*@
        <div class="col-md-6">
            <div class="form-group">
                <label>Time Zone</label>
                @Html.DropDownList("time_zone", ViewBag.TimeZone as List<SelectListItem>, "Please Select", new { id = "time_zone", @class = "form-control required", required = "required" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Country Code</label>
                @Html.TextBoxFor(m => m.country_code, new { @class = "form-control", id = "country_code", pattern = @RegExConst.NumbersWithPlusAndSpaceOnly, placeholder = "Country Code", required = "required",@readonly = "readonly", title = "Enter Country Code" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Phone No</label>
                @Html.TextBoxFor(m => m.phone, new { @class = "form-control", id = "phone_number",onblur ="return isNumber(event)", onkeypress = "return isNumber(event)", @pattern = @RegExConst.NumbersWithPlusOnly, placeholder = "Phone", required = "required", title = "Enter Phone" })
                @*@Html.TextBoxFor(m => m.phone, new { @class = "form-control", id = "phone_number", placeholder = "Phone", pattern = @RegExConst.NumbersOnly, required = "required", title = "Enter Phone" })*@
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Country</label>
                @Html.DropDownList("country_id", ViewBag.country_id as List<SelectListItem>, "Please Select", new { @class = "form-control", required = "required" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>State</label>
                @Html.DropDownList("state_id", ViewBag.StateName as List<SelectListItem>, "Please Select", new { @class = "form-control", required = "required" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>City</label>
                @Html.TextBoxFor(m => m.city, new { @class = "form-control", id = "city", placeholder = "City", pattern = @RegExConst.CharactersOnly, required = "required", title = "Enter City" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Address</label>
                @Html.TextBoxFor(m => m.address, new { @class = "form-control", id = "address", placeholder = "Address", pattern = @RegExConst.General, required = "required", title = "Enter Address" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Zip</label>
                @Html.TextBoxFor(m => m.zip, new { @class = "form-control", id = "zip", placeholder = "Zip", pattern = @RegExConst.NumbersOnly, required = "required", title = "Enter Zip" })
            </div>
        </div>
        <div class="col-md-6" style="display:@Is_view">
            <div class="form-group">
                <div class="checkbox checkbox-primary pull-left p-t-0">
                    <input id="is_active" name="is_active" type="checkbox" value="@Model.is_active.ToString()">
                    <label for="is_active"> Enable</label>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Company Logo</label>
                <input class="form-control" type="file" id="company_logo" data-file-ext="png,jpg,jpeg" name="company_logo">
                <input type="hidden" id="company_logo" name="company_logo" value="@Model.company_logo" />
                @if (Model.company_id != 0 && Model.company_logo != null)
                {
                    <img src="@img" style='height:100px;width:100px;'>
                }
            </div>
        </div>
        @if (Model.company_id == 0)
        {
            <div class="col-md-6">
                <div class="form-group">
                    <label>User Name</label>
                    @Html.Hidden("user_id")
                    @Html.TextBox("user_name", null, new { @class = "form-control", id = "user_name", placeholder = "User Name", pattern = @RegExConst.AlphaNumericAndSpaceOnly, required = "required", title = "Enter Name", @isExist = "false" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label>Gender</label>
                    @Html.DropDownList("gender", new List<SelectListItem> { new SelectListItem { Text = "Male", Value = "M" }, new SelectListItem { Text = "Female", Value = "F   " } }, "Please Select", new { id = "gender", @class = "form-control", required = "required" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label>Login Id</label>
                    @Html.TextBox("login_id", null, new { @class = "form-control", id = "login_id", placeholder = "Login Id", pattern = @RegExConst.AlphaNumericAndSpaceOnly, required = "required", title = "Enter Login Id", @isExist = "true" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label>Password</label>
                    <input id="password" name="password" type="text" placeholder="Password" required class="form-control">
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label>Mobile No</label>
                    @Html.TextBox("mobile", null, new { @class = "form-control", id = "mobile", placeholder = "Mobile", onblur = "return isNumber(event)", onkeypress = "return isNumber(event)", pattern = @RegExConst.NumbersWithPlusOnly, maxlength = 16, minlength = 10, required = "required", title = "Enter Mobile No", @isExist = "false" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label>Email-Id</label>
                    @Html.TextBox("email_id", null, new { @class = "form-control", id = "email_id", Type = "email", placeholder = "Email Id", required = "required", title = "Enter Email-Id", @isExist = "true" })
                </div>
            </div>
        }
        <div class="clearfix"></div>
        <div class="col-md-12">
            <button type="submit" class="btn btn-success waves-effect waves-light m-r-10">Submit</button>
        </div>
    </div>
}
